name: Deploy

on: 
  push:
    branches:
      - main
  release: 
    types: 
      - "published"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        
      - name: linting
        run: go mod tidy && gofmt -w .

      - name: build project
        run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o ./bin/easyflow-backend ./src

      - name: login to docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

        
      - name: create image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=dev,enable=${{ github.ref_name == 'main' }}
      
      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
            
      - name: setup railway cli
        run: npm i -g @railway/cli
      
      - name: trigger redeploy on railway development
        if: github.ref_name == 'main'
        run: RAILWAY_TOKEN=${{ secrets.RAILWAY_DEV_TOKEN }} railway redeploy -s ${{ vars.RAILWAY_SERVICE_NAME }} -y
        
      - name: trigger redeploy on railway production
        if: github.event_name == 'release'
        run: RAILWAY_TOKEN=${{ secrets.RAILWAY_PROD_TOKEN }} railway redeploy -s ${{ vars.RAILWAY_SERVICE_NAME }} -y
